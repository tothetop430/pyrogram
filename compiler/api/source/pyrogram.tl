// Pyrogram

---types---

pyrogram.update#b0700000 flags:# update_id:int message:flags.0?Message edited_message:flags.1?Message channel_post:flags.2?Message edited_channel_post:flags.3?Message inline_query:flags.4?InlineQuery chosen_inline_result:flags.5?ChosenInlineResult callback_query:flags.6?CallbackQuery shipping_query:flags.7?ShippingQuery pre_checkout_query:flags.8?PreCheckoutQuery = pyrogram.Update; // Docs: Update§This object represents an incoming update.At most one of the optional parameters can be present in any given update.|update_id§The update's unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you're using Webhooks, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order. If there are no new updates for at least a week, then identifier of the next update will be chosen randomly instead of sequentially.|message§Optional. New incoming message of any kind — text, photo, sticker, etc.|edited_message§Optional. New version of a message that is known to the bot and was edited|channel_post§Optional. New incoming channel post of any kind — text, photo, sticker, etc.|edited_channel_post§Optional. New version of a channel post that is known to the bot and was edited|inline_query§Optional. New incoming inline query|chosen_inline_result§Optional. The result of an inline query that was chosen by a user and sent to their chat partner. Please see our documentation on the feedback collecting for details on how to enable these updates for your bot.|callback_query§Optional. New incoming callback query|shipping_query§Optional. New incoming shipping query. Only for invoices with flexible price|pre_checkout_query§Optional. New incoming pre-checkout query. Contains full information about checkout
pyrogram.user#b0700001 flags:# id:int is_bot:Bool first_name:string last_name:flags.0?string username:flags.1?string language_code:flags.2?string = pyrogram.User; // Docs: User§This object represents a Telegram user or bot.|id§Unique identifier for this user or bot|is_bot§True, if this user is a bot|first_name§User's or bot's first name|last_name§Optional. User's or bot's last name|username§Optional. User's or bot's username|language_code§Optional. IETF language tag of the user's language
pyrogram.chat#b0700002 flags:# id:int type:string title:flags.0?string username:flags.1?string first_name:flags.2?string last_name:flags.3?string all_members_are_administrators:flags.4?Bool photo:flags.5?ChatPhoto description:flags.6?string invite_link:flags.7?string pinned_message:flags.8?Message sticker_set_name:flags.9?string can_set_sticker_set:flags.10?Bool = pyrogram.Chat; // Docs: Chat§This object represents a chat.|id§Unique identifier for this chat. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.|type§Type of chat, can be either "private", "group", "supergroup" or "channel"|title§Optional. Title, for supergroups, channels and group chats|username§Optional. Username, for private chats, supergroups and channels if available|first_name§Optional. First name of the other party in a private chat|last_name§Optional. Last name of the other party in a private chat|all_members_are_administrators§Optional. True if a group has 'All Members Are Admins' enabled.|photo§Optional. Chat photo. Returned only in getChat.|description§Optional. Description, for supergroups and channel chats. Returned only in getChat.|invite_link§Optional. Chat invite link, for supergroups and channel chats. Returned only in getChat.|pinned_message§Optional. Pinned message, for supergroups and channel chats. Returned only in getChat.|sticker_set_name§Optional. For supergroups, name of group sticker set. Returned only in getChat.|can_set_sticker_set§Optional. True, if the bot can change the group sticker set. Returned only in getChat.
pyrogram.message#b0700003 flags:# message_id:int from_user:flags.0?User date:int chat:Chat forward_from:flags.1?User forward_from_chat:flags.2?Chat forward_from_message_id:flags.3?int forward_signature:flags.4?string forward_date:flags.5?int reply_to_message:flags.6?Message edit_date:flags.7?int media_group_id:flags.8?string author_signature:flags.9?string text:flags.10?string entities:flags.11?Vector<MessageEntity> caption_entities:flags.12?Vector<MessageEntity> audio:flags.13?Audio document:flags.14?Document game:flags.15?Game photo:flags.16?Vector<PhotoSize> sticker:flags.17?Sticker video:flags.18?Video voice:flags.19?Voice video_note:flags.20?VideoNote caption:flags.21?string contact:flags.22?Contact location:flags.23?Location venue:flags.24?Venue new_chat_members:flags.25?Vector<User> left_chat_member:flags.26?User new_chat_title:flags.27?string new_chat_photo:flags.28?Vector<PhotoSize> delete_chat_photo:flags.29?true group_chat_created:flags.30?true supergroup_chat_created:flags.31?true channel_chat_created:flags.32?true migrate_to_chat_id:flags.33?int migrate_from_chat_id:flags.34?int pinned_message:flags.35?Message invoice:flags.36?Invoice successful_payment:flags.37?SuccessfulPayment connected_website:flags.38?string = pyrogram.Message; // Docs: Message§This object represents a message.|message_id§Unique message identifier inside this chat|from_user§Optional. Sender, empty for messages sent to channels|date§Date the message was sent in Unix time|chat§Conversation the message belongs to|forward_from§Optional. For forwarded messages, sender of the original message|forward_from_chat§Optional. For messages forwarded from channels, information about the original channel|forward_from_message_id§Optional. For messages forwarded from channels, identifier of the original message in the channel|forward_signature§Optional. For messages forwarded from channels, signature of the post author if present|forward_date§Optional. For forwarded messages, date the original message was sent in Unix time|reply_to_message§Optional. For replies, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.|edit_date§Optional. Date the message was last edited in Unix time|media_group_id§Optional. The unique identifier of a media message group this message belongs to|author_signature§Optional. Signature of the post author for messages in channels|text§Optional. For text messages, the actual UTF-8 text of the message, 0-4096 characters.|entities§Optional. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text|caption_entities§Optional. For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption|audio§Optional. Message is an audio file, information about the file|document§Optional. Message is a general file, information about the file|game§Optional. Message is a game, information about the game. More about games|photo§Optional. Message is a photo, available sizes of the photo|sticker§Optional. Message is a sticker, information about the sticker|video§Optional. Message is a video, information about the video|voice§Optional. Message is a voice message, information about the file|video_note§Optional. Message is a video note, information about the video message|caption§Optional. Caption for the audio, document, photo, video or voice, 0-200 characters|contact§Optional. Message is a shared contact, information about the contact|location§Optional. Message is a shared location, information about the location|venue§Optional. Message is a venue, information about the venue|new_chat_members§Optional. New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)|left_chat_member§Optional. A member was removed from the group, information about them (this member may be the bot itself)|new_chat_title§Optional. A chat title was changed to this value|new_chat_photo§Optional. A chat photo was change to this value|delete_chat_photo§Optional. Service message: the chat photo was deleted|group_chat_created§Optional. Service message: the group has been created|supergroup_chat_created§Optional. Service message: the supergroup has been created. This field can't be received in a message coming through updates, because bot can't be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.|channel_chat_created§Optional. Service message: the channel has been created. This field can't be received in a message coming through updates, because bot can't be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.|migrate_to_chat_id§Optional. The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.|migrate_from_chat_id§Optional. The supergroup has been migrated from a group with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.|pinned_message§Optional. Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it is itself a reply.|invoice§Optional. Message is an invoice for a payment, information about the invoice. More about payments|successful_payment§Optional. Message is a service message about a successful payment, information about the payment. More about payments|connected_website§Optional. The domain name of the website on which the user has logged in. More about Telegram Login
pyrogram.messageEntity#b0700004 flags:# type:string offset:int length:int url:flags.0?string user:flags.1?User = pyrogram.MessageEntity; // Docs: MessageEntity§This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.|type§Type of the entity. Can be mention (@username), hashtag, bot_command, url, email, bold (bold text), italic (italic text), code (monowidth string), pre (monowidth block), text_link (for clickable text URLs), text_mention (for users without usernames)|offset§Offset in UTF-16 code units to the start of the entity|length§Length of the entity in UTF-16 code units|url§Optional. For "text_link" only, url that will be opened after user taps on the text|user§Optional. For "text_mention" only, the mentioned user
pyrogram.photoSize#b0700005 flags:# file_id:string width:int height:int file_size:flags.0?int = pyrogram.PhotoSize; // Docs: PhotoSize§This object represents one size of a photo or a file / sticker thumbnail.|file_id§Unique identifier for this file|width§Photo width|height§Photo height|file_size§Optional. File size
pyrogram.audio#b0700006 flags:# file_id:string duration:int performer:flags.0?string title:flags.1?string mime_type:flags.2?string file_size:flags.3?int = pyrogram.Audio; // Docs: Audio§This object represents an audio file to be treated as music by the Telegram clients.|file_id§Unique identifier for this file|duration§Duration of the audio in seconds as defined by sender|performer§Optional. Performer of the audio as defined by sender or by audio tags|title§Optional. Title of the audio as defined by sender or by audio tags|mime_type§Optional. MIME type of the file as defined by sender|file_size§Optional. File size
pyrogram.document#b0700007 flags:# file_id:string thumb:flags.0?PhotoSize file_name:flags.1?string mime_type:flags.2?string file_size:flags.3?int = pyrogram.Document; // Docs: Document§This object represents a general file (as opposed to photos, voice messages and audio files).|file_id§Unique file identifier|thumb§Optional. Document thumbnail as defined by sender|file_name§Optional. Original filename as defined by sender|mime_type§Optional. MIME type of the file as defined by sender|file_size§Optional. File size
pyrogram.video#b0700008 flags:# file_id:string width:int height:int duration:int thumb:flags.0?PhotoSize mime_type:flags.1?string file_size:flags.2?int = pyrogram.Video; // Docs: Video§This object represents a video file.|file_id§Unique identifier for this file|width§Video width as defined by sender|height§Video height as defined by sender|duration§Duration of the video in seconds as defined by sender|thumb§Optional. Video thumbnail|mime_type§Optional. Mime type of a file as defined by sender|file_size§Optional. File size
pyrogram.voice#b0700009 flags:# file_id:string duration:int mime_type:flags.0?string file_size:flags.1?int = pyrogram.Voice; // Docs: Voice§This object represents a voice note.|file_id§Unique identifier for this file|duration§Duration of the audio in seconds as defined by sender|mime_type§Optional. MIME type of the file as defined by sender|file_size§Optional. File size
pyrogram.videoNote#b0700010 flags:# file_id:string length:int duration:int thumb:flags.0?PhotoSize file_size:flags.1?int = pyrogram.VideoNote; // Docs: VideoNote§This object represents a video message (available in Telegram apps as of v.4.0).|file_id§Unique identifier for this file|length§Video width and height as defined by sender|duration§Duration of the video in seconds as defined by sender|thumb§Optional. Video thumbnail|file_size§Optional. File size
pyrogram.contact#b0700011 flags:# phone_number:string first_name:string last_name:flags.0?string user_id:flags.1?int = pyrogram.Contact; // Docs: Contact§This object represents a phone contact.|phone_number§Contact's phone number|first_name§Contact's first name|last_name§Optional. Contact's last name|user_id§Optional. Contact's user identifier in Telegram
pyrogram.location#b0700012 longitude:double latitude:double = pyrogram.Location; // Docs: Location§This object represents a point on the map.|longitude§Longitude as defined by sender|latitude§Latitude as defined by sender
pyrogram.venue#b0700013 flags:# location:Location title:string address:string foursquare_id:flags.0?string = pyrogram.Venue; // Docs: Venue§This object represents a venue.|location§Venue location|title§Name of the venue|address§Address of the venue|foursquare_id§Optional. Foursquare identifier of the venue
pyrogram.userProfilePhotos#b0700014 total_count:int photos:Vector<Vector<PhotoSize>> = pyrogram.UserProfilePhotos; // Docs: UserProfilePhotos§This object represent a user's profile pictures.|total_count§Total number of profile pictures the target user has|photos§Requested profile pictures (in up to 4 sizes each)
pyrogram.chatPhoto#b0700015 small_file_id:string big_file_id:string = pyrogram.ChatPhoto; // Docs: ChatPhoto§This object represents a chat photo.|small_file_id§Unique file identifier of small (160x160) chat photo. This file_id can be used only for photo download.|big_file_id§Unique file identifier of big (640x640) chat photo. This file_id can be used only for photo download.
pyrogram.chatMember#b0700016 flags:# user:User status:string until_date:flags.0?int can_be_edited:flags.1?Bool can_change_info:flags.2?Bool can_post_messages:flags.3?Bool can_edit_messages:flags.4?Bool can_delete_messages:flags.5?Bool can_invite_users:flags.6?Bool can_restrict_members:flags.7?Bool can_pin_messages:flags.8?Bool can_promote_members:flags.9?Bool can_send_messages:flags.10?Bool can_send_media_messages:flags.11?Bool can_send_other_messages:flags.12?Bool can_add_web_page_previews:flags.13?Bool = pyrogram.ChatMember; // Docs: ChatMember§This object contains information about one member of a chat.|user§Information about the user|status§The member's status in the chat. Can be "creator", "administrator", "member", "restricted", "left" or "kicked"|until_date§Optional. Restricted and kicked only. Date when restrictions will be lifted for this user, unix time|can_be_edited§Optional. Administrators only. True, if the bot is allowed to edit administrator privileges of that user|can_change_info§Optional. Administrators only. True, if the administrator can change the chat title, photo and other settings|can_post_messages§Optional. Administrators only. True, if the administrator can post in the channel, channels only|can_edit_messages§Optional. Administrators only. True, if the administrator can edit messages of other users and can pin messages, channels only|can_delete_messages§Optional. Administrators only. True, if the administrator can delete messages of other users|can_invite_users§Optional. Administrators only. True, if the administrator can invite new users to the chat|can_restrict_members§Optional. Administrators only. True, if the administrator can restrict, ban or unban chat members|can_pin_messages§Optional. Administrators only. True, if the administrator can pin messages, supergroups only|can_promote_members§Optional. Administrators only. True, if the administrator can add new administrators with a subset of his own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by the user)|can_send_messages§Optional. Restricted only. True, if the user can send text messages, contacts, locations and venues|can_send_media_messages§Optional. Restricted only. True, if the user can send audios, documents, photos, videos, video notes and voice notes, implies can_send_messages|can_send_other_messages§Optional. Restricted only. True, if the user can send animations, games, stickers and use inline bots, implies can_send_media_messages|can_add_web_page_previews§Optional. Restricted only. True, if user may add web page previews to his messages, implies can_send_media_messages
